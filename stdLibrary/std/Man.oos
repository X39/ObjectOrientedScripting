using std::Config
using std::Context
using std::base::VehicleBase
using std::Group

namespace std
{
    native Man extends ::std::base::VehicleBase
    {
        enum AiSection
        {
            Target = "TARGET",
            Autotarget = "AUTOTARGET",
            Move = "MOVE",
            Anim = "ANIM",
            Teamswitch = "TEAMSWITCH",
            FSM = "FSM",
            Aimingerror = "AIMINGERROR",
            Suppression = "SUPPRESSION",
            Checkvisible = "CHECKVISIBLE",
            Cover = "COVER",
            Autocombat = "AUTOCOMBAT"
        }
        enum Rank
        {
            Private = "PRIVATE",
            Corporal = "CORPORAL",
            Sergeant = "SERGEANT",
            Lieutenant = "LIEUTENANT",
            Captain = "CAPTAIN",
            Major = "MAJOR",
            Colonel = "COLONEL"
        }
        enum VisionMode
        {
            DayTime = 0,
            NightVision = 1,
            FLIR = 2
        }
        assign simple (::std::Group group, string type, scalar i, scalar j, scalar k)                            ( group ) createUnit [type, [i, j, k], [], 0, "FORM"]    endAssign
        assign (::std::Group group, string type, scalar i, scalar j, scalar k, scalar skill, Rank rank)
            private "_unit";
            _unit = ( group ) createUnit [type, [i, j, k], [], 0, "FORM"];
            _unit setRank rank;
            _unit setSkill skill;
            _unit
        endAssign
        assign simple (::std::Group group, string type, vec3 position)                                            ( group ) createUnit [type, position, [], 0, "FORM"]    endAssign
        assign (::std::Group group, string type, vec3 position, scalar skill, Rank rank)
            private "_unit";
            _unit = ( group ) createUnit [type, position, [], 0, "FORM"];
            _unit setRank rank;
            _unit setSkill skill;
            _unit
        endAssign
        
        fnc void disableAI (AiSection section)
            if(!local _this) exitWith
            {
                throw "UnitNotLocalException";
            };
            _this disableAI ( section )    
        endFnc
        fnc void enableAI (AiSection section)
            if(!local _this) exitWith
            {
                throw "UnitNotLocalException";
            };
            _this enableAI ( section )    
        endFnc
        fnc simple VisionMode getVisionMode ()          currentVisionMode _this     endFnc
    }
    static fnc simple ::std::Man getPlayer () player endFnc
}
