using std::Config
using std::Context
using std::base::VehicleBase
using std::Group

namespace std
{
    native Man extends ::std::base::VehicleBase
    {
		enum AiSection
		{
			Target = "TARGET",
			Autotarget = "AUTOTARGET",
			Move = "MOVE",
			Anim = "ANIM",
			Teamswitch = "TEAMSWITCH",
			FSM = "FSM",
			Aimingerror = "AIMINGERROR",
			Suppression = "SUPPRESSION"
		}
		enum Rank
		{
			Private = "PRIVATE",
			Corporal = "CORPORAL",
			Sergeant = "SERGEANT",
			Lieutenant = "LIEUTENANT",
			Captain = "CAPTAIN",
			Major = "MAJOR",
			Colonel = "COLONEL"
		}
		assign simple (::std::Group group, string type, scalar i, scalar j, scalar k)							( group ) createUnit [type, [i, j, k], [], 0, "FORM"]	endAssign
		assign (::std::Group group, string type, scalar i, scalar j, scalar k, scalar skill, Rank rank)
			private "_unit";
			_unit = ( group ) createUnit [type, [i, j, k], [], 0, "FORM"];
			_unit setRank rank;
			_unit setSkill skill;
			_unit
		endAssign
		assign simple (::std::Group group, string type, vec3 position)											( group ) createUnit [type, position, [], 0, "FORM"]	endAssign
		assign (::std::Group group, string type, vec3 position, scalar skill, Rank rank)
			private "_unit";
			_unit = ( group ) createUnit [type, position, [], 0, "FORM"];
			_unit setRank rank;
			_unit setSkill skill;
			_unit
		endAssign
		
		fnc simple void disableAI (AiSection section)	_this disableAI ( section )	endFnc
		fnc simple void enableAI (AiSection section)	_this enableAI ( section )	endFnc
    }
	static fnc simple ::std::Man getPlayer () player endFnc
}
