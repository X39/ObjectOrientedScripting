native array<T>
{
    assign simple ()
        []
    endAssign

    fnc simple scalar pushBack (T _val)
        _this pushBack ( _val )
    endFnc
    
    fnc simple scalar popBack ()
        _this deleteAt ( (count _this) - 1)
    endFnc

    fnc simple scalar find (T _val)
        _this find ( _val )
    endFnc

    fnc simple bool contains (T _val)
        _val in _this
    endFnc

    fnc simple void resize (scalar _i)
        _this resize ( _i )
    endFnc

    fnc simple T deleteAt (scalar _i)
        _this deleteAt ( _i )
    endFnc
    
    fnc simple ::array<T> getRange(scalar index, scalar len)
    {
        _this select [index, len]
    }

    fnc simple void deleteRange (scalar index, scalar len)
        _this deleteRange [index, len]
    endFnc

    fnc simple scalar length ()
        count _this
    endFnc

    fnc simple scalar append (::array<T> arr)
        _this append ( arr )
    endFnc

    operator simple T [] (scalar _i)
        _this select ( _i )
    endOperator
}