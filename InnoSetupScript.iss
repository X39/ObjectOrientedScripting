; Script generated by the Inno Setup Script Wizard.
; SEE THE DOCUMENTATION FOR DETAILS ON CREATING INNO SETUP SCRIPT FILES!

#define MyAppName "OOS"
#define MyAppVersion "0.7.1-ALPHA"
#define MyAppPublisher "X39"
#define MyAppURL "http://x39.io/?page=projects&project=ObjectOrientedScripting"
#define MyAppExeName "WrapperUI.exe"

[Setup]
; NOTE: The value of AppId uniquely identifies this application.
; Do not use the same AppId value in installers for other applications.
; (To generate a new GUID, click Tools | Generate GUID inside the IDE.)
AppId={{52A7EACD-C1EA-4328-B463-91F6AA9467F9}
AppName={#MyAppName}
AppVersion={#MyAppVersion}
;AppVerName={#MyAppName} {#MyAppVersion}
AppPublisher={#MyAppPublisher}
AppPublisherURL={#MyAppURL}
AppSupportURL={#MyAppURL}
AppUpdatesURL={#MyAppURL}
DefaultDirName={pf}\{#MyAppName}
DefaultGroupName={#MyAppName}
AllowNoIcons=yes
OutputBaseFilename=setup
Compression=lzma
SolidCompression=yes

[Languages]
Name: "english"; MessagesFile: "compiler:Default.isl"

[Files]    
Source: "D:\GitHub\ObjectOrientedScripting\ObjectOrientedScripting\Wrapper\bin\Release\Wrapper.exe"; DestDir: "{app}"; Flags: ignoreversion    
Source: "D:\GitHub\ObjectOrientedScripting\ObjectOrientedScripting\WrapperUI\bin\Release\WrapperUI.exe"; DestDir: "{app}"; Flags: ignoreversion
Source: "D:\GitHub\ObjectOrientedScripting\KnownIssues.txt"; DestDir: "{app}"; Flags: ignoreversion
Source: "D:\GitHub\ObjectOrientedScripting\CompilerDlls\*"; DestDir: "{app}"; Flags: ignoreversion recursesubdirs
Source: "D:\GitHub\ObjectOrientedScripting\ObjectOrientedScripting\Wrapper\bin\Release\Logger.dll"; DestDir: "{app}"; Flags: ignoreversion
Source: "D:\GitHub\ObjectOrientedScripting\stdLibrary\*"; DestDir: "{app}\stdLibrary\"; Flags: ignoreversion recursesubdirs
; NOTE: Don't use "Flags: ignoreversion" on any shared system files

[Icons]
Name: "{group}\{#MyAppName}"; Filename: "{app}\{#MyAppExeName}"
Name: "{group}\{cm:UninstallProgram,{#MyAppName}}"; Filename: "{uninstallexe}"

[Code]
var
  ChangelogPage: TOutputMsgMemoWizardPage;

procedure InitializeWizard;
begin
  ChangelogPage := CreateOutputMsgMemoPage(wpWelcome, 'Changelog', 'The change history', 'Feel free to fully ignore this changelog anytime :)',
'Version 0.7.1-ALPHA                                                             ' + AnsiChar(#10) +
'    |- Compiler:  fixed member functions without arguments lacked params command' + AnsiChar(#10) +
'    |- Compiler:  fixed callWrapper `___tmp___ = ___tmp___` printout            ' + AnsiChar(#10) +
'    |- Compiler:  fixed breakout missed left args brackets                      ' + AnsiChar(#10) +
'    |- Compiler:  fixed invalid LNKxxxx exception when function is not existing ' + AnsiChar(#10) +
'    |- Compiler:  fixed ident call wrapper used ___tmp___ AND _tmp              ' + AnsiChar(#10) +
'    |- Compiler:  fixed some other stuff (meh ... do not ask :) tiny things)    ' + AnsiChar(#10) +
'    |- Compiler:  fixed loops not printing scopeName instruction                ' + AnsiChar(#10) +
'    |- Compiler:  "using" files did not got preprocessed                        ' + AnsiChar(#10) +
'    |- Compiler:  fixed third for argument is printed at the very begining      ' + AnsiChar(#10) +
'    |- Compiler:  fixed native function calls do not process last argument      ' + AnsiChar(#10) +
'    |- Compiler:  fixed passing <IDENT>.<IDENT> for a native function (and some ' + AnsiChar(#10) +
'    |             other things too ... kinda hard to explain ^^)                ' + AnsiChar(#10) +
'    |- Compiler:  fixed objects require auto keyword inside of code             ' + AnsiChar(#10) +
'    |- Compiler:  added static native functions                                 ' + AnsiChar(#10) +
'    |- Compiler:  added external function references using the external keyword ' + AnsiChar(#10) +
'    |             static external [ async ] <TYPE> <IDENT> ( <ARGLIST> );       ' + AnsiChar(#10) +
'    |- Compiler:  added foreach operation                                       ' + AnsiChar(#10) +
'    |             foreach( <VARTYPE> <IDENT> in <IDENT> )                       ' + AnsiChar(#10) +
'    |- Compiler:  added vec3 object to OOS                                      ' + AnsiChar(#10) +
'    |v- Compiler: added native functions to OOS                                 ' + AnsiChar(#10) +
'    ||-           isServer()                                                    ' + AnsiChar(#10) +
'    ||-           sleep(scalar)                                                 ' + AnsiChar(#10) +
'    |\-           isDedicated()                                                 ' + AnsiChar(#10) +
'    |- stdLib:    added ::std::getPlayer static function to ::std::Man          ' + AnsiChar(#10) +
'    |- stdLib:    added AiSection enum to ::std::Man                            ' + AnsiChar(#10) +
'    |- stdLib:    added enableAI function to ::std::Man                         ' + AnsiChar(#10) +
'    |- stdLib:    added disableAI function to ::std::Man                        ' + AnsiChar(#10) +
'    |- stdLib:    fixed invalid return type in getObject of ::std::Context      ' + AnsiChar(#10) +
'    |- stdLib:    fixed script issue on ::std::VehicleBase::setDamage(scalar)   ' + AnsiChar(#10) +
'    |- stdLib:    fixed invalid string argument on ::std::Config::count()       ' + AnsiChar(#10) +
'    |- stdLib:    fixed potential script issue in all native objects            ' + AnsiChar(#10) +
'    \- stdLib:    changed function arglists of ::std::Context                   ' + AnsiChar(#10) +   
'                                                                                ' + AnsiChar(#10) +
'Version 0.7.0-ALPHA                                                             ' + AnsiChar(#10) +
'    |- Compiler:  fixed objects added using the using instruction where not     ' + AnsiChar(#10) +
'    |             touched by the PreProcessor                                   ' + AnsiChar(#10) +
'    |- Compiler:  printout syntax got altered slightly (missing tabs and invalid' + AnsiChar(#10) +
'    |             new lines)                                                    ' + AnsiChar(#10) +
'    |- Compiler:  fixed for required all params or it would throw a NPE         ' + AnsiChar(#10) +
'    |- Compiler:  fixed NPE when assigning variables in other namespaces        ' + AnsiChar(#10) +
'    |- Compiler:  fixed StackOverflow case with this variable                   ' + AnsiChar(#10) +
'    |- Compiler:  using directive threw out folder path instead of file path    ' + AnsiChar(#10) +
'    |- Compiler:  using now is generalized (no difference between local and std ' + AnsiChar(#10) +
'    |             includes) thus syntax changed:                                ' + AnsiChar(#10) +
'    |             using ::foo::bar                                              ' + AnsiChar(#10) +
'    |             instead of                                                    ' + AnsiChar(#10) +
'    |             using "::foo::bar" or using <::foo::bar>                      ' + AnsiChar(#10) +
'    |- Compiler:  fixed invalid encapsulation on object function "toString"     ' + AnsiChar(#10) +
'    |- Compiler:  Changed cast operator from %...% to <...>                     ' + AnsiChar(#10) +
'    |- Compiler:  fixed templates only could use native types                   ' + AnsiChar(#10) +
'    |- Compiler:  added internal class "array"                                  ' + AnsiChar(#10) +
'    |- Compiler:  added internal class "string"                                 ' + AnsiChar(#10) +
'    |- Compiler:  Parser is more solid now (side effect thx to EBNF changes)    ' + AnsiChar(#10) +
'    |- Compiler:  Fixed CfgFunctions class is never written out regardless of   ' + AnsiChar(#10) +
'    |             the NFNC flag                                                 ' + AnsiChar(#10) +
'    |- Compiler:  Fixed invalid distinction between variable and function when  ' + AnsiChar(#10) +
'    |             using a class variable with an object as type                 ' + AnsiChar(#10) +
'    |- Compiler:  class & native syntax now supports flags                      ' + AnsiChar(#10) +
'    |             (not important for generic oos users)                         ' + AnsiChar(#10) +
'    |             `class <IDENT> flags <FLAG1> <FLAG2> <FLAGN>`                 ' + AnsiChar(#10) +
'    |             Flags which got introduced:                                   ' + AnsiChar(#10) +
'    |             - disableConstructor                                          ' + AnsiChar(#10) +
'    |             - noObjectExtends                                             ' + AnsiChar(#10) +
'    |             - virtualFunctionsOnly (not available in native)              ' + AnsiChar(#10) +
'    |- Compiler:  Introduced enum`s. They got following syntax:                 ' + AnsiChar(#10) +
'    |             enum { <IDENT1> [ = <VALUE2> ], <IDENTN> [ = <VALUEN> ] }     ' + AnsiChar(#10) +
'    |- Compiler:  SQF instruction now supports forcedType via "as". Example:    ' + AnsiChar(#10) +
'    |             `SQF allPlayers as ::std::Array<::std::Men>`                  ' + AnsiChar(#10) +
'    |- stdLib:    added ::std::UI::Display object                               ' + AnsiChar(#10) +
'    |- stdLib:    added ::std::UI::Control object                               ' + AnsiChar(#10) +
'    |- stdLib:    added ::std::Marker object                                    ' + AnsiChar(#10) +
'    |- stdLib:    fixed invalid typing in ::std::base::VehicleBase object       ' + AnsiChar(#10) +
'    |- stdLib:    removed ::std::Array object (moved to internal classes)       ' + AnsiChar(#10) +
'    |- stdLib:    removed ::std::String object (moved to internal classes)      ' + AnsiChar(#10) +
'    |- stdLib:    added get-/setObject function to ::std::Context               ' + AnsiChar(#10) +
'    \- .oosproj:  Added <srcfolder> attribute to set the source folder          ' + AnsiChar(#10) +      
'                                                                                ' + AnsiChar(#10) +
'Version 0.6.2-ALPHA                                                             ' + AnsiChar(#10) +
'    |- Compiler:  fixed various minor issues                                    ' + AnsiChar(#10) +
'    |- Compiler:  removed multi-base classes                                    ' + AnsiChar(#10) +
'    |- Compiler:  improved object structure (==> less overhead)                 ' + AnsiChar(#10) +
'    |- Compiler:  fixed overloaded functions overwriting themself               ' + AnsiChar(#10) +
'    |- Compiler:  fixed different case same name functions overwriting themself ' + AnsiChar(#10) +
'    |- Compiler:  temporary disabled interfaces as function argument            ' + AnsiChar(#10) +
'    |- Compiler:  fixedasync keyword made functions being callen instead of     ' + AnsiChar(#10) +
'    |             spawned (and vice versa)                                      ' + AnsiChar(#10) +
'    |- Compiler:  unlocked the native "object" object (actually thats a speciall' + AnsiChar(#10) +
'    \             internal class now, might happen with string too soon)        ' + AnsiChar(#10) +
'                                                                                ' + AnsiChar(#10) +
'Version 0.6.1-ALPHA                                                             ' + AnsiChar(#10) +
'    |- Compiler:  fixed InstanceOf printout                                     ' + AnsiChar(#10) +
'    |- Compiler:  Introduced "using" operation, replaces #include               ' + AnsiChar(#10) +
'    |- Compiler:  #include now wont "include" the file anymore and instead just ' + AnsiChar(#10) +
'    |             checks the PreProcessor directives in given file              ' + AnsiChar(#10) +
'    |- Compiler:  Added "extends" keyword to native classes --> you now can     ' + AnsiChar(#10) +
'    |             extend native classes                                         ' + AnsiChar(#10) +
'    |- Compiler:  Added code for the "async" keyword on functions (sorry)       ' + AnsiChar(#10) +
'    |- Compiler:  "PRINTMODE" flag modes have changed:                          ' + AnsiChar(#10) +
'    |             Possible modes are: NONE, 0, NEEDED, 1, ALL, 2                ' + AnsiChar(#10) +
'    |- Compiler:  Renamed all stdLibrary objects to have first char uppercase   ' + AnsiChar(#10) +
'    |- Compiler:  Added "VehicleBase" object to stdLibrary (not intended to be  ' + AnsiChar(#10) +
'    |             created via new, will throw an error when you attempt)        ' + AnsiChar(#10) +
'    |- Compiler:  Added "Man" object to stdLibrary, represents all CAManBase    ' + AnsiChar(#10) +
'    |             ArmA objects                                                  ' + AnsiChar(#10) +
'    \- WrapperUI: Introduced WrapperUI.exe, a UI for OOS <3 (to be improved)    ' + AnsiChar(#10) +    
'                                                                                ' + AnsiChar(#10) +
'Version 0.6.0-ALPHA                                                             ' + AnsiChar(#10) +
'    |- Compiler:  Rewrote entire Linker & Writer                                ' + AnsiChar(#10) +
'    |- Compiler:  Added !syntax! to call base constructors via following:       ' + AnsiChar(#10) +
'    |             bar(arg1, arg2, argn) : foo(arg1, "foobar", argn) {...}       ' + AnsiChar(#10) +
'    |- Compiler:  During Linking, functions will now check if they always return' + AnsiChar(#10) +
'    |             (only exception for this are VOID functions)                  ' + AnsiChar(#10) +
'    |- Compiler:  Added "PRINTMODE=<MODE>" Flag                                 ' + AnsiChar(#10) +
'    |             Possible modes are: NONE, 0, NEEDED, 1, PARTIAL, 2, ALL, 3    ' + AnsiChar(#10) +
'    |- Compiler:  Added fast assign operators: ++, --, +=, -=, *=, /=           ' + AnsiChar(#10) +
'    |- Compiler:  Reorganized how overwrite should be used (see INFO1)          ' + AnsiChar(#10) +
'    |- Compiler:  Added "async" keyword for functions (see INFO1)               ' + AnsiChar(#10) +
'    |             async functions have to have the return type void!            ' + AnsiChar(#10) +
'    |- INFO1:     Functions syntax got altered:                                 ' + AnsiChar(#10) +
'    \             <encapsulation> [async] [override] <type> <name> ( <argList> )' + AnsiChar(#10) +
'                                                                                ' + AnsiChar(#10) +
'Version 0.5.3-ALPHA                                                             ' + AnsiChar(#10) +
'    |- Compiler:  Fixed invalid type cast with template objects                 ' + AnsiChar(#10) +
'    |- Compiler:  Fixed bug in PreProcessor which caused invalid output if a    ' + AnsiChar(#10) +
'    |             line had whitespace characters after its last valid character ' + AnsiChar(#10) +
'    |- Compiler:  SQF command arguments where not separated by commas           ' + AnsiChar(#10) +
'    |- Compiler:  Added "scalar length()" function to ::std::array              ' + AnsiChar(#10) +
'    |- Compiler:  Added "config" object to stdLibrary                           ' + AnsiChar(#10) +
'    |- Compiler:  Added "namespace" object to stdLibrary                        ' + AnsiChar(#10) +
'    |- Compiler:  Added "vehicle" object to stdLibrary                          ' + AnsiChar(#10) +
'    |- Compiler:  PreProcessor allowed multiple includes of the same file ref.  ' + AnsiChar(#10) +
'    |- Compiler:  Parent classes/interfaces now need to be adressed with        ' + AnsiChar(#10) +
'    |             extends (for classes) or implements (for interfaces)          ' + AnsiChar(#10) +
'                                                                                ' + AnsiChar(#10) +
'Version 0.5.2-ALPHA                                                             ' + AnsiChar(#10) +
'    |- Compiler:  Fixed output folder is not getting generated if not existing  ' + AnsiChar(#10) +
'    |- Compiler:  Fixed typeless functions are all recognized as constructor    ' + AnsiChar(#10) +
'    |- Compiler:  Fixed classes are lacking a cfgConfig layer                   ' + AnsiChar(#10) +
'    |- Compiler:  Fixed namespace static variables lacked semicolon in EBNF     ' + AnsiChar(#10) +
'    |- Compiler:  Fixed object functions not getting object parameter passed    ' + AnsiChar(#10) +
'    |- Compiler:  Added output folder cleanup                                   ' + AnsiChar(#10) +
'    |- Compiler:  Flag /NOCLEANUP which prevents output folder cleanup          ' + AnsiChar(#10) +
'    |- Compiler:  PreProcessor now supports stdLibrary #include (using < >)     ' + AnsiChar(#10) +
'    |- Compiler:  Added additional keyword "boolean" for bool types             ' + AnsiChar(#10) +
'    |- Compiler:  New CompileErrors: C0049                                      ' + AnsiChar(#10) +
'    |- Compiler:  Added NativeClasses                                           ' + AnsiChar(#10) +
'    \- Compiler:  Added array object to stdLib                                  ' + AnsiChar(#10) +
'                                                                                ' + AnsiChar(#10) +
'Version 0.5.1-ALPHA                                                             ' + AnsiChar(#10) +
'    |- Wrapper:   Fixed naming of -gen param (poject.oosproj instead of         ' + AnsiChar(#10) +
'    |             project.oosproj)                                              ' + AnsiChar(#10) +
'    |- Wrapper:   Fixed "URI-Format not supported" message when not forcing     ' + AnsiChar(#10) +
'    |             a DLL (dll lookup now works as expected -.-*)                 ' + AnsiChar(#10) +
'    \- Compiler:  Fixed functions getting invalidly recognized as duplicate     ' + AnsiChar(#10) +
'                                                                                ' + AnsiChar(#10) +
'Version 0.5.0-ALPHA                                                             ' + AnsiChar(#10) +
'    |- Wrapper:   Fixed -gen is not working if file is not existing             ' + AnsiChar(#10) +
'    |             (also if file was existing ... but expected error then)       ' + AnsiChar(#10) +
'    |- Compiler:  Flag /DEFINE="#whatever(arg) dosomething with arg"            ' + AnsiChar(#10) +
'    |- Compiler:  Flag /THISVAR="_thisvarname_"                                 ' + AnsiChar(#10) +
'    |- Compiler:  PreProcessor replaced non-keywords when they just contained a ' + AnsiChar(#10) +
'    |             part of the keyword (EG. keyword was FOO, FOOBAR would have   ' + AnsiChar(#10) +
'    |             been replaced with <CONTENT>BAR)                              ' + AnsiChar(#10) +
'    |- Compiler:  PreProcessor now supports "merge" operator ##                 ' + AnsiChar(#10) +
'    |             #define FOO(BAR) BAR##FOOBAR                                  ' + AnsiChar(#10) +
'    |             FOO(test) => testFOOBAR                                       ' + AnsiChar(#10) +
'    \v- Compiler: GEN2 Implementation                                           ' + AnsiChar(#10) +
'     |-           New Syntax                                                    ' + AnsiChar(#10) +
'     |-           New SQF ObjectStructure                                       ' + AnsiChar(#10) +
'     |-           Type Restriction (with that all stuff that is connected to it)' + AnsiChar(#10) +
'     |-           Interfaces (and with them virtual functions)                  ' + AnsiChar(#10) +
'     |-           "Linker" issues with proper issue IDs                         ' + AnsiChar(#10) +
'     |            (currently room for 4 digits (so 0001 - 9999))                ' + AnsiChar(#10) +
'     \-           No unneeded overhead anymore                                  ' + AnsiChar(#10) +
'                                                                                ' + AnsiChar(#10) +
'Version 0.4.0-ALPHA                                                             ' + AnsiChar(#10) +
'    |- Wrapper:   Now returns -1 if was not successfully                        ' + AnsiChar(#10) +
'    |- Wrapper:   Added "setFlags(string[])" function to ICompiler interface    ' + AnsiChar(#10) +
'    |- Wrapper:   Fixed compilerDLL search location                             ' + AnsiChar(#10) +
'    |             Working dir (applicationside) was checked                     ' + AnsiChar(#10) +
'    |             and not executable dir                                        ' + AnsiChar(#10) +
'    |- Compiler:  Fixed naming of functions in output config file               ' + AnsiChar(#10) +
'    |             being incorrect                                               ' + AnsiChar(#10) +
'    |- Compiler:  Added flag /CLFN with STRING value ("/CLFN=blabla.cfg")       ' + AnsiChar(#10) +
'    |             Sets how the output config will be named                      ' + AnsiChar(#10) +
'    |- Compiler:  Added flag /NFNC                                              ' + AnsiChar(#10) +
'    \             Removes the CfgFunctions class from the config file           ' + AnsiChar(#10) +
'                                                                                ' + AnsiChar(#10) +
'Version 0.3.0-ALPHA                                                             ' + AnsiChar(#10) +
'    |- Compiler:  changed block native code from:                               ' + AnsiChar(#10) +
'    |                 native <instructions> endnative                           ' + AnsiChar(#10) +
'    |             to:                                                           ' + AnsiChar(#10) +
'    |                 startnative <instructions> endnative                      ' + AnsiChar(#10) +
'    |- Compiler:  Added "native(<instructions>)" specially for expressions      ' + AnsiChar(#10) +
'    |             (will be merged at some point with the block native again)    ' + AnsiChar(#10) +
'    |- Compiler:  Added SQF Call instruction:                                   ' + AnsiChar(#10) +
'    |                SQF [ (>arg1>, <argN>) ] <instruction> [ (>arg1>, <argN>) ]' + AnsiChar(#10) +
'    |- Compiler:  Added missing detection for                                   ' + AnsiChar(#10) +
'    |             unsigned integer/double values in VALUE                       ' + AnsiChar(#10) +
'    |- Compiler:  Added missing detection for                                   ' + AnsiChar(#10) +
'    |             >, >=, <, <= operations in EXPRESSION                         ' + AnsiChar(#10) +
'    |- Compiler:  Added missing LOCALVARIABLE alternative for FORLOOP           ' + AnsiChar(#10) +
'    |- Compiler:  Fixed FORLOOP                                                 ' + AnsiChar(#10) +
'    \- Compiler:  PrettyPrint sqf output improved                               ' + AnsiChar(#10) +
'                                                                                ' + AnsiChar(#10) +
'Version 0.2.0-ALPHA                                                             ' + AnsiChar(#10) +
'    |v- Wrapper:  New Parameters                                                ' + AnsiChar(#10) +
'    ||-           "sc=<FILE>"    Used to check the syntax of some document      ' + AnsiChar(#10) +
'    ||-           "dll=<FILE>"   Forces given dll (ignores project settings)    ' + AnsiChar(#10) +
'    |\-           "log[=<FILE>]" Enables LogToFile                              ' + AnsiChar(#10) +
'    |                            (with optional file parameter)                 ' + AnsiChar(#10) +
'    |- Compiler:  Fixed TryCatch                                                ' + AnsiChar(#10) +
'    |- Compiler:  Fixed Expressions                                             ' + AnsiChar(#10) +
'    |- Compiler:  Implemented class inheritance                                 ' + AnsiChar(#10) +
'    |- Compiler:  Implemented public/private encapsulation                      ' + AnsiChar(#10) +
'    |- Compiler:  when parsing error was found the objectTree                   ' + AnsiChar(#10) +
'    |             wont get written out anymore                                  ' + AnsiChar(#10) +
'    |- Wrapper:   Fixed ArgumentDetection (foo=bar was not detected)            ' + AnsiChar(#10) +
'    \- Logger:    Disabled logToFile per default                                '
  );
end;